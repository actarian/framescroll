{"version":3,"sources":["docs/js/app.js"],"names":["mouseDownY","req","usePicture","pictureUrl","videoUrl","fps","totalFrames","duration","markers","pictures","concurrent","scrolling","pow","end","endTime","previous","direction","diff","index","container","document","querySelector","content","preload","video","picture","track","steps","time","scroll","player","setProgress","loaded","total","percent","parseInt","innerHTML","Init","setAttribute","pause","addEventListener","onTrack","window","onDown","onMove","onUp","onWheel","onscroll","onScroll","requestAnimationFrame","animate","currentTime","play","setTime","i","Math","max","min","round","src","frame","requests","onCheckNextPicture","length","push","onLoadNextPicture","XMLHttpRequest","open","split","join","responseType","onload","this","status","blob","response","image","URL","createObjectURL","shift","onerror","e","console","log","send","PreloadPictures","onprogress","videoBlob","source","html","toFixed","addSteps","timeapi","peformance","performance","Date","fpsInterval","now","then","elapsed","paused","step","abs","containerHeight","offsetHeight","onLoop","preventDefault","stopImmediatePropagation","target","getAttribute","setIndex","Array","prototype","slice","call","parentNode","children","indexOf","scrubStart","clientY","innerHeight","setScroll","filter","item","setNearestDirection","deltaY","previousMarker","nextMarker","$","slick","top","scrollTo","ready","infinite","slidesToShow","slidesToScroll","vertical","arrows","dots","swipe","swipeToSlide","verticalSwiping"],"mappings":"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","file":"app.min.js","sourcesContent":["/* global window, document, console  */\n\n(function () {\n    'use strict';\n\n    var usePicture = false;\n    var pictureUrl = 'img/campagnolo/campagnolo_{0}.jpg';\n    var videoUrl = 'img/campagnolo.webm?c';\n    var videoUrlMp4 = 'img/campagnolo2.mp4';\n    var videoUrlCheck = 'img/Chrome_ImF.webm';\n    var fps = 25.0;\n    var totalFrames = 498;\n    var duration = totalFrames / fps;\n    var currentTime = 0.0;\n    var pageOffset = 0.0;\n    var currentMarker = 0.0;\n    var markers = [0, 2.14, 5.22, 9.16, 12.13, 16.08, duration];\n    var pictures = [];\n    var concurrent = 15;\n\n    var speed, mouseDownY;\n    var scrolling = {\n        pow: 0,\n        end: 0,\n        endTime: 0,\n        previous: 0,\n        direction: 0,\n        diff: 0,\n        index: 0,\n    };\n\n    // select video element\n    var container = document.querySelector('.container');\n    var content = document.querySelector('.content');\n    var preload = document.querySelector('.preload');\n    var video = document.querySelector('.video');\n    var picture = document.querySelector('.picture');\n    var track = document.querySelector('.track');\n    var steps = document.querySelector('.steps');\n    var time = document.querySelector('.circle-time');\n    var scroll = document.querySelector('.circle-scroll');\n    var player = video;\n\n    if (usePicture) {\n        container.setAttribute('class', 'container container-picture loading');\n        player = picture;\n        player.currentTime = 0.0;\n        player.duration = duration;\n        player.play = player.pause = function () {};\n        player.setTime = function () {\n            var i = Math.max(1, Math.min(totalFrames, Math.round(player.currentTime * fps)));\n            if (player.index !== i) {\n                player.index = i;\n                // console.log(i, pictures[i]);\n                player.src = pictures[i];\n            }\n        };\n        PreloadPictures();\n    } else {\n        container.setAttribute('class', 'container container-video loading');\n        player = video;\n        player.setTime = function () {};\n        PreloadVideo();\n    }\n\n    function addSteps() {\n        for (var i = 0; i < markers.length; i++) {\n            var marker = markers[i];\n            var html = '<div class=\"step\" style=\"top:' + (marker / duration * 100).toFixed(3) + '%\"></div>';\n            steps.innerHTML += html;\n            // console.log(steps, html);\n        }\n    }\n    addSteps();\n\n    function setProgress(loaded, total) {\n        var progress = loaded / total;\n        var percent = parseInt(progress * 100);\n        preload.innerHTML = percent;\n        // console.log(percent);\n    }\n\n    function PreloadPictures() {\n        var total = totalFrames;\n        var loaded = 0;\n        var frame = 0;\n        var requests = [];\n\n        function onCheckNextPicture() {\n            while (requests.length < concurrent && frame < total) {\n                requests.push(true);\n                onLoadNextPicture(++frame);\n            }\n        }\n\n        function onLoadNextPicture(frame) {\n            var req = new XMLHttpRequest();\n            req.open('GET', pictureUrl.split('{0}').join(frame), true);\n            req.responseType = 'blob';\n            req.onload = function () {\n                if (this.status === 200) {\n                    var blob = this.response;\n                    var image = URL.createObjectURL(blob); // IE10+\n                    pictures[frame] = image;\n                    loaded++;\n                    requests.shift();\n                    setProgress(loaded, total);\n                    if (loaded === total) {\n                        player.setTime();\n                        Init();\n                    } else {\n                        onCheckNextPicture();\n                    }\n                }\n            };\n            req.onerror = function (e) {\n                console.log('preload.error', e);\n            };\n            req.send();\n        }\n        onCheckNextPicture();\n    }\n\n    function PreloadVideo() {\n        var req = new XMLHttpRequest();\n        req.open('GET', videoUrl, true);\n        req.responseType = 'blob';\n        req.onprogress = function (e) {\n            setProgress(e.loaded, e.total);\n        };\n        req.onload = function () {\n            if (this.status === 200) {\n                var videoBlob = this.response;\n                var source = URL.createObjectURL(videoBlob); // IE10+\n                video.src = source;\n                Init();\n            }\n        };\n        req.onerror = function (e) {\n            console.log('preload.error', e);\n        };\n        req.send();\n    }\n\n    function Init() {\n        if (usePicture) {\n            container.setAttribute('class', 'container container-picture');\n        } else {\n            container.setAttribute('class', 'container container-video');\n        }\n        scrolling.pow = scrolling.end = 0;\n        speed = 0.0;\n        mouseDownY = null;\n\n        video.pause();\n\n        track.addEventListener('mousedown', onTrack);\n        window.addEventListener('mousedown', onDown);\n        window.addEventListener('mousemove', onMove);\n        window.addEventListener('mouseup', onUp);\n        window.addEventListener('mouseleave', onUp);\n        window.addEventListener('wheel', onWheel);\n        window.onscroll = onScroll;\n        // setInterval(onLoop, 1000.0 / fps);\n        window.requestAnimationFrame(animate);\n    }\n\n    function elastic(pow) {\n        var accelamount = 0.05; //How fast the video will try to catch up with the target position. 1 = instantaneous, 0 = do nothing.\n        var bounceamount = 0.7; //value from 0 to 1 for how much backlash back and forth you want in the easing. 0 = no bounce whatsoever, 1 = lots and lots of bounce\n        speed += (scrolling.end - pow) * accelamount;\n        speed = Math.max(-1, Math.min(1, speed));\n        pow = (pow + speed) * (bounceamount) + (scrolling.end * (1 - bounceamount));\n        return pow;\n    }\n\n    function onLoop() {\n        if (player.duration) {\n            if (mouseDownY) {\n                scrolling.pow = scrolling.end;\n                player.pause();\n                player.currentTime = scrolling.pow * player.duration;\n                player.setTime();\n            } else {\n                if (scrolling.end !== scrolling.pow) {\n                    /*\n                    if (timeDirection > 0 && player.paused) {\n                        player.play();\n                    } else if (timeDirection < 0 && !player.paused) {\n                        player.pause();\n                    }\n                    */\n                    if (!player.paused) {\n                        player.pause();\n                    }\n                    var diff = scrolling.end - scrolling.pow;\n                    var step = 1.0 / fps;\n                    if (Math.abs(diff * player.duration) < step) {\n                        scrolling.pow = scrolling.end;\n                    } else {\n                        var direction = diff ? diff / Math.abs(diff) : 0;\n                        scrolling.pow += (step * direction) / player.duration;\n                    }\n                    var currentTime = Math.round(scrolling.pow * player.duration / step) * step + 0.00001;\n                    player.currentTime = currentTime;\n                    player.setTime();\n                }\n            }\n            var containerHeight = container.offsetHeight;\n            var contentHeight = content.offsetHeight;\n            time.setAttribute('style', 'top:' + (15 + ((player.currentTime / player.duration) * (containerHeight - 30))) + 'px;');\n        }\n    }\n\n    var timeapi = window.peformance ? performance : Date;\n    var fpsInterval = 1000 / fps,\n        now = 0,\n        then = 0,\n        elapsed = 0;\n\n    function animate() {\n        // calc elapsed time since last loop\n        now = timeapi.now();\n        elapsed = now - then;\n        // if enough time has elapsed, draw the next frame\n\n        if (elapsed > fpsInterval) {\n\n            // Get ready for next frame by setting then=now, but also adjust for your\n            // specified fpsInterval not being a multiple of RAF's interval (16.7ms)\n            then = now - (elapsed % fpsInterval);\n\n            // Put your drawing code here\n            onLoop();\n        }\n        // request another frame\n        requestAnimationFrame(animate);\n    }\n\n    function onTrack(e) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n        if (e.target.getAttribute('class') === 'step') {\n            var nodes = Array.prototype.slice.call(e.target.parentNode.children);\n            var index = nodes.indexOf(e.target);\n            setIndex(index);\n        }\n        return false;\n    }\n\n    var scrubStart = 0.0;\n\n    function onDown(e) {\n        mouseDownY = e.clientY;\n        scrubStart = scrolling.end || 0;\n        console.log('onDown', mouseDownY, scrubStart);\n    }\n\n    function onMove(e) {\n        if (mouseDownY) {\n            if (Math.abs(mouseDownY - e.clientY) > 1) {\n                var min = 0,\n                    max = 1,\n                    pow = (mouseDownY - e.clientY) / (window.innerHeight * 3);\n                scrolling.end = Math.max(0, Math.min(1, scrubStart + pow));\n                // console.log('onMove', scrubStart, pow);\n                setScroll();\n            }\n        }\n    }\n\n    function onUp(e) {\n        if (mouseDownY) {\n            var diff = (mouseDownY - e.clientY);\n            console.log(e.clientY, mouseDownY, diff);\n            if (diff) {\n                mouseDownY = null;\n                var direction = diff / Math.abs(diff);\n\n                var time = scrolling.end * player.duration;\n                markers.filter(function (item, index) {\n                    if (time > item && time < markers[index + 1]) {\n                        scrolling.index = index + (direction > 0 ? 0 : 1);\n                        // console.log('scrolling.index', scrolling.index);\n                    }\n                });\n\n                setNearestDirection(direction);\n                setScroll();\n            }\n        }\n    }\n\n    function onWheel(e) {\n        var wheelDirection = e.deltaY / Math.abs(e.deltaY);\n        setNearestDirection(wheelDirection);\n        setScroll();\n    }\n\n    function onScroll() {\n        /*\n        updateTime();\n        if (!mouseDownY) {\n            var time = getNearestMarker(scrolling.end * player.duration);\n            scrolling.end = time / player.duration;\n        }\n        */\n        var containerHeight = container.offsetHeight;\n        scroll.setAttribute('style', 'top : ' + (15 + (scrolling.end * (containerHeight - 30))) + 'px;');\n    }\n\n    function setIndex(index) {\n        console.log('setIndex', index);\n        if (index !== scrolling.index) {\n            var direction = (index - scrolling.index) / Math.abs(index - scrolling.index);\n            var previousMarker = markers[scrolling.index];\n            var nextMarker = markers[index];\n            var currentTime = scrolling.pow * player.duration;\n            if (currentTime >= Math.min(previousMarker, nextMarker) && currentTime <= Math.max(previousMarker, nextMarker)) {\n                scrolling.index = index;\n                scrolling.endTime = markers[scrolling.index];\n                scrolling.direction = direction;\n                scrolling.end = scrolling.endTime / player.duration;\n                console.log('setNearestDirection', index, previousMarker, nextMarker, currentTime);\n                var containerHeight = container.offsetHeight;\n                scroll.setAttribute('style', 'top : ' + (15 + (scrolling.end * (containerHeight - 30))) + 'px;');\n                $('.slick').slick('slickGoTo', index);\n            }\n        }\n    }\n\n    function setNearestDirection(direction) {\n        var index = scrolling.index;\n        if (direction === 1) {\n            index = Math.min(markers.length - 1, scrolling.index + 1);\n        } else {\n            index = Math.max(0, scrolling.index - 1);\n        }\n        setIndex(index);\n    }\n\n    function setScroll() {\n        var containerHeight = container.offsetHeight;\n        var contentHeight = content.offsetHeight;\n        var min = 0,\n            max = (contentHeight - containerHeight),\n            top = scrolling.end * max;\n        window.scrollTo(0, Math.max(min, Math.min(max, top)));\n    }\n\n    /*\n    function updateTime() {\n        var containerHeight = container.offsetHeight;\n        var contentHeight = content.offsetHeight;\n        var min = 0,\n            max = player.duration,\n            end = window.pageYOffset / (contentHeight - containerHeight);\n        scrolling.end = Math.max(min, Math.min(max, end));\n        scrolling.diff = scrolling.end - scrolling.previous;\n        scrolling.direction = scrolling.diff / Math.abs(scrolling.diff);\n        scrolling.previous = scrolling.end;\n        scroll.setAttribute('style', 'top : ' + (15 + (scrolling.end * (containerHeight - 30))) + 'px;');\n    }\n    */\n\n    function getNearestMarker(time) {\n        var marker = markers.reduce(function (prev, curr) {\n            return (Math.abs(curr - time) < Math.abs(prev - time) ? curr : prev);\n        });\n        return marker;\n    }\n\n    function getMarker(forward) {\n        var marker = null;\n        if (Math.abs(currentMarker - player.currentTime) < 1.0) {\n            markers.filter(function (item) {\n                if (marker === null && (item > currentMarker || !forward)) {\n                    marker = item;\n                }\n            });\n        } else {\n            marker = currentMarker;\n        }\n        console.log(currentMarker, player.currentTime);\n        return marker;\n    }\n\n    /*\n    var isPlaying = video.currentTime > 0 && !video.paused && !video.ended \n        && video.readyState > 2;\n\n    if (!isPlaying) {\n      video.play();\n    }\n\n    */\n\n    $(document).ready(function () {\n        var slick = $('.slick').slick({\n            infinite: false,\n            slidesToShow: 1,\n            slidesToScroll: 1,\n            vertical: true,\n            arrows: false,\n            dots: false,\n            swipe: false,\n            swipeToSlide: false,\n            verticalSwiping: false,\n        });\n    });\n\n}());"]}